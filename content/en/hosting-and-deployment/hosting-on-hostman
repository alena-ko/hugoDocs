---
title: Host on Hostman
linktitle: Host on Hostman
description: Host your Hugo site for free with Hostman's global CDN, fully-managed SSL, SSH and auto deploys from your repository.
date: 2021-04-22
publishdate: 2021-04-22
lastmod: 2021-04-22
categories: [hosting and deployment]
keywords: [hostman,hosting,deployment]
menu:
  docs:
    parent: "hosting-and-deployment"
    weight: 10
weight: 10
sections_weight: 10
draft: false
aliases: []
toc: true
---

[Hostman](https://hostman.com/) is a cloud hosting provider for startups and new projects. It helps to get rid of most routine DevOps operations, saving time for developers and money for companies. Hostman employs a services concept to make it easier to develop complex architecture and scale it in one click.

Deploy static websites **for free** with Hostman. All the following features included:

- Hostman automates CI/CD, pulling, building and launching code as soon as you push a new commit to the repository.
- Everything is transparent: you see the actual hardware your application is operating on and the actual load average, so you can assess them if something goes wrong. 
- You have an SSH inside your Docker container, providing the perfect balance between abstraction and transparency.
- Hostman automatically sets up an SSL certificate for all your domains and puts a CDN in place to deliver your content as fast as possible.
- Custom URL redirects and rewrites.
- No vendor lock


## Prerequisites

This guide assumes you already have a Hugo static site. You can build a Hugo website here: https://gohugo.io/getting-started/quick-start/

## Setup

<strong>Step 1. Create a service</strong>

To deploy Hugo static website, click Create in the top-left corner of your [Dashboard](https://dashboard.hostman.com/) and choose Front-end app or static website.

![Hostman dashboard](https://i.imgur.com/bEePHDo.png)

<strong>Step 2. Select the project to deploy</strong>

If you are logged in to Hostman with your GitHub, GitLab or Bitbucket account, at this point you will see the repository with your projects, including the private ones.

![Choose a project](https://i.imgur.com/kOVXop7.png)

To access a different repository, click <strong>Connect another repository</strong>.

If you didn’t use your Git account credentials to log in, you’ll be able to access the necessary account now, and then select the project.

<strong>Step 3. Configure the build settings</strong>

Next, the Website customization window will appear.

![Build configuration](https://i.imgur.com/Okqe7Id.png)

Choose the <strong>Static website</strong> option from the list of frameworks.

The Directory with app points at the directory that will contain the project's files after the build. For Hugo it is usually public.

The standard build command will be:

hugo --gc

You can modify the build command if needed. You can enter multiple commands separated by &&.

<strong>Step 4. Deploy</strong>

Click <strong>Deploy</strong> to start the build process.

Once it starts, you will enter the deployment log. If there are any issues with the code, you will get warning or error messages in the log, specifying the cause of the problem.

Usually the log contains all the debugging data you'll need, but we are also here to help you solve the issues, so do not hesitate to contact us via chat.

When the deployment is complete, you will receive an e-mail notification and also see a similar log entry:

![Log entry](https://i.imgur.com/KwzMxTb.png)

<strong>All done!</strong>

Your project is up and ready.
